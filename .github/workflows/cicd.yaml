name: CI/CD Workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-gcr-image:
    name: Build & Push Docker Image
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip docker.io

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set GCP Project
        run: gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker europe-west9-docker.pkg.dev

      - name: Build and Push Docker image
        env:
          IMAGE_NAME: cnncls
          REPO_NAME: ${{ secrets.GCP_ARTIFACT_REPO }}
        run: |
          IMAGE_URI=europe-west9-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/$REPO_NAME/$IMAGE_NAME:latest
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

  deploy-to-gce:
    needs: build-and-push-gcr-image
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Docker on GCE VM
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      - name: Pull latest Docker image
        run: docker pull ${{ env.IMAGE_URI }}

      - name: Stop & remove old container if exists
        run: |
          docker ps -q --filter "name=cnncls" | grep -q . && docker stop cnncls && docker rm -fv cnncls || echo "No old container"

      - name: Run Docker container
        run: docker run -d -p 8080:8080 --name=cnncls ${{ env.IMAGE_URI }}

      - name: Clean up old images
        run: docker system prune -f
